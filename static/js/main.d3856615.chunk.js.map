{"version":3,"sources":["components/Map.js","constants/styles.js","components/SectionDivider.js","components/Section.js","components/SectionHeader.js","sections/Info.js","sections/Venue.js","sections/Welcome.js","config/firebaseConfig.js","App.js","serviceWorker.js","index.js"],"names":["MapWrapper","styled","div","Map","src","width","height","style","border","title","COLORS","breakpoint","props","paddingBottom","SectionBorder","index","topOrBottomReverse","leftOrRight","getBorderStyle","SectionBorderContent","SectionDivider","SectionWrapper","backgroundPosition","StyledSection","backgroundUrl","backgroundSize","minHeight","ImageWrapper","Section","children","SectionHeader","data","Fragment","h1","h2","p","Header","Info","this","Component","Wrapper","Venue","HeaderArea","HeaderText","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","PasswordInput","input","SubmitButton","button","MainDiv","App","state","pw","everythingOK","sections","menuIsExpanded","firebase","initializeApp","firebaseConfig","pollRef","database","ref","on","entry","val","toLowerCase","setState","getSections","orderByChild","value","length","sectionId","Math","random","toString","slice","map","section","position","className","top","type","key","getChildren","onClick","document","querySelector","window","scroll","getBoundingClientRect","left","behavior","renderMenu","renderSections","onSubmit","e","preventDefault","checkPassword","transform","right","onChange","evt","target","placeholder","Boolean","location","hostname","match","smoothscroll","polyfill","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d3856615.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst MapWrapper = styled.div`\n  width: 90%;\n  height: 40vw;\n  margin: 0 auto;\n`;\n\nconst Map = () => {\n  return (\n    <MapWrapper>\n      <iframe\n        src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2004.9742934839057!2d17.74245321636064!3d59.83295838183788!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x465fc8db47fb087f%3A0xd37895e96ddf6fba!2sDanmarks%20kyrka!5e0!3m2!1ssv!2sse!4v1569006706360!5m2!1ssv!2sse\"\n        width=\"100%\"\n        height=\"100%\"\n        style={{ border: 0 }}\n        title=\"dk-map\"\n      ></iframe>\n    </MapWrapper>\n  );\n};\n\nexport default Map;\n","import styled from \"@emotion/styled\";\nexport const COLORS = {\n  // primary: \"#3E473C\",\n  primary: \"#2D372C\",\n  secondary: \"#E0E3E9\",\n  tertiary: \"#B8C6D0\"\n};\n\nexport const Header = styled.div`\n  padding-bottom: ${props => props.paddingBottom};\n`;\n\nexport const breakpoint = {\n  mobile: \"@media only screen and (min-width: 896px)\"\n};\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { COLORS } from \"../constants/styles\";\n\nconst getBorderStyle = index => {\n  const topOrBottom = index % 2 === 0 ? \"top\" : \"bottom\";\n  const topOrBottomReverse = index % 2 === 0 ? \"bottom\" : \"top\";\n  const leftOrRight = index % 4 < 2 ? \"left\" : \"right\";\n  return `\n  border-${topOrBottom}: 100px solid ${COLORS.tertiary};\n  border-${leftOrRight}: 100vw solid transparent; \n  margin-${topOrBottomReverse}: 4vw;\n  `;\n};\n\nconst SectionBorder = styled.div`\n  width: 0;\n  height: 0;\n  ${props => getBorderStyle(props.index)}\n`;\n//   ${props =>\n//     props.index % 2 === 0\n//       ? `border-top: 100px solid ${COLORS.tertiary};\n//   border-left: 100vw solid transparent;`\n//       : `border-bottom: 100px solid ${COLORS.tertiary};\n// \tborder-right: 100vw solid transparent;`}\n//   ${props => (props.index % 2 === 0 ? \"margin-bottom\" : \"margin-top\")}: 4vw;\n// `;\n\nconst SectionBorderContent = styled.div`\n  ${props => (props.index % 2 === 0 ? \"margin-top\" : \"margin-bottom\")}: 4vw;\n  height: 8vw;\n  background: ${COLORS.tertiary};\n`;\n\nexport const SectionDivider = ({ index }) => {\n  return index % 2 === 0 ? (\n    <div>\n      <SectionBorderContent index={index} />\n      <SectionBorder index={index} />\n    </div>\n  ) : (\n    <div>\n      <SectionBorder index={index} />\n      <SectionBorderContent index={index} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { SectionDivider } from \"./SectionDivider\";\n\nconst SectionWrapper = styled.div`\n  ${props => \"display: flex;\"}\n  align-items: center;\n  justify-content: space-around;\n  ${props =>\n    props.backgroundPosition === \"left\" && \"flex-direction: row-reverse\"};\n  ${props =>\n    (!props.backgroundPosition || props.backgroundPosition === \"center\") &&\n    \"flex-direction: column\"};\n  @media only screen and (min-width: 800px) {\n    margin: 0 5vw;\n  }\n`;\n\nconst StyledSection = styled.div`\n  position: relative;\n  ${props =>\n    props.backgroundUrl &&\n    `\n    background-image: url(\"${props.backgroundUrl}\");`};\n  ${props => !!props.backgroundUrl && \"min-height: 50vw;\"}\n  width: 100%;\n  background-position: ${props => props.backgroundPosition || \"center\"};\n  background-repeat: no-repeat;\n  background-size: ${props => props.backgroundSize || \"contain\"};\n  // margin-top: 100px;\n  ${props => (props.minHeight ? `min-height: ${props.minHeight}` : \"\")};\n`;\n\nconst ImageWrapper = styled.div`\n  position: relative;\n  width: ${props =>\n    !props.backgroundPosition || props.backgroundPosition === \"center\"\n      ? \"100%\"\n      : \"50%\"};\n`;\nconst Section = ({ children, ...props }) => (\n  <>\n    <SectionWrapper {...props}>\n      {children}\n      <ImageWrapper {...props}>\n        <StyledSection {...props}></StyledSection>\n      </ImageWrapper>\n    </SectionWrapper>\n    <SectionDivider index={props.index} />\n  </>\n);\n\nexport default Section;\n","import React from \"react\";\n\nexport const SectionHeader = ({ data = {} }) => {\n  return (\n    <React.Fragment>\n      {data.h1 && <h1>{data.h1}</h1>}\n      {data.h2 && <h2>{data.h2}</h2>}\n      {data.p && <p>{data.p}</p>}\n    </React.Fragment>\n  );\n};\n","import React, { Component } from \"react\";\nimport styled from \"@emotion/styled\";\nimport Section from \"../components/Section\";\nimport { SectionHeader } from \"../components/SectionHeader\";\nimport { breakpoint } from \"../constants/styles\";\n\nconst Header = styled.div`\n  flex-shrink: 0;\n  width: 100%;\n  margin: 48px;\n  ${breakpoint.mobile} {\n    width: 50%;\n  }\n`;\n\nexport default class Info extends Component {\n  render() {\n    const { data, children } = this.props;\n    return (\n      <Section {...data}>\n        <Header>\n          <SectionHeader data={data}></SectionHeader>\n        </Header>\n        {children}\n      </Section>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport styled from \"@emotion/styled\";\nimport Map from \"../components/Map\";\nimport Info from \"./Info\";\nimport Section from \"../components/Section\";\nimport { SectionHeader } from \"../components/SectionHeader\";\nimport { breakpoint } from \"../constants/styles\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  width: 100%;\n  flex-direction: column;\n  margin-bottom: 48px;\n\n  ${breakpoint.mobile} {\n    flex-direction: row;\n    ${props =>\n      props.backgroundPosition === \"left\" && \"flex-direction: row-reverse\"};\n  }\n`;\nconst Header = styled.div`\n  flex-shrink: 0;\n  width: 100%;\n  margin: 48px;\n  ${breakpoint.mobile} {\n    width: 50%;\n  }\n`;\n\nexport default class Venue extends Component {\n  render() {\n    const { data } = this.props;\n    return (\n      <Section {...data} backgroundPosition=\"center\">\n        <Wrapper {...data}>\n          <Header>\n            <SectionHeader data={data}></SectionHeader>\n          </Header>\n          <Map />\n        </Wrapper>\n      </Section>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport styled from \"@emotion/styled\";\nimport Section from \"../components/Section\";\nimport { SectionHeader } from \"../components/SectionHeader\";\n\nconst HeaderArea = styled.div`\n  // padding-bottom: 40vw;\n  // color: white;\n  position: relative;\n`;\n\nconst HeaderText = styled.div`\n  text-align: center;\n\n  h1 {\n    font-size: 72px;\n    font-family: \"Satisfy\", sans-serif;\n  }\n\n  p {\n    font-size: 24px;\n  }\n`;\n\nexport default class Venue extends Component {\n  render() {\n    const { data = {} } = this.props;\n    return (\n      <Section {...data} backgroundPosition=\"center\">\n        <HeaderArea>\n          <HeaderText>\n            <SectionHeader data={data} />\n          </HeaderText>\n        </HeaderArea>\n      </Section>\n    );\n  }\n}\n","export default {\n  apiKey: \"AIzaSyBhwsa3RtllrM6JtvqHakVKz3OnSQ1959I\",\n  authDomain: \"create-react-wedding.firebaseapp.com\",\n  databaseURL: \"https://create-react-wedding.firebaseio.com\",\n  projectId: \"create-react-wedding\",\n  storageBucket: \"create-react-wedding.appspot.com\",\n  messagingSenderId: \"14129889005\",\n  appId: \"1:14129889005:web:4ebf7de0f115d9b6b2d6e4\"\n};\n","import React, { Component } from \"react\";\nimport styled from \"@emotion/styled\";\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport Venue from \"./sections/Venue\";\nimport Welcome from \"./sections/Welcome\";\nimport Info from \"./sections/Info\";\nimport firebaseConfig from \"./config/firebaseConfig\";\n\nimport \"./App.css\";\nimport { COLORS } from \"./constants/styles\";\n\nconst PasswordInput = styled.input`\n  color: ${COLORS.primary};\n  font-size: 1em;\n  border: 2px solid ${COLORS.primary};\n  border-radius: 3px;\n\n  /* here we use the dynamically computed prop */\n  margin: 0.25em;\n  padding: 0.75em;\n`;\n\nconst SubmitButton = styled.button`\n  /* Adapt the colors based on primary prop */\n  background: ${COLORS.secondary};\n  color: ${COLORS.primary};\n  :hover {\n    background: ${COLORS.primary};\n    color: ${COLORS.secondary};\n  }\n\n  font-size: 1em;\n  font-weight: bold;\n  margin: 0.25em;\n  padding: 0.75em 2em;\n  border: 2px solid ${COLORS.primary};\n  border-radius: 3px;\n  cursor: pointer;\n`;\n\nconst MainDiv = styled.div`\n  background: ${COLORS.secondary};\n  color: ${COLORS.primary};\n  width: 100%;\n  height: 100%;\n  padding-top: 100px;\n  overflow: auto;\n`;\n\nclass App extends Component {\n  state = { pw: \"\", everythingOK: false, sections: [], menuIsExpanded: false };\n  componentDidMount() {\n    // Initialize Firebase\n    firebase.initializeApp(firebaseConfig);\n  }\n\n  checkPassword() {\n    if (this.state.pw) {\n      this.pollRef = firebase.database().ref(`/idrottshall/kaffe`);\n      this.pollRef.on(\"value\", entry => {\n        if (entry.val() === this.state.pw.toLowerCase()) {\n          this.setState({ everythingOK: true });\n          this.getSections();\n        }\n      });\n    }\n  }\n  getSections() {\n    if (this.state.everythingOK) {\n      const dbRef = firebase.database().ref(`/sections`);\n\n      dbRef.orderByChild(\"index\").on(\"child_added\", value => {\n        this.setState({\n          sections: [\n            ...this.state.sections,\n            {\n              ...value.val(),\n              backgroundPosition: [\"right\", \"left\"][\n                // Math.floor(Math.random() * 3)\n                (this.state.sections.length - 1) % 2\n              ],\n              sectionId: Math.random()\n                .toString(36)\n                .slice(2)\n            }\n          ]\n        });\n      });\n    }\n  }\n  renderSections() {\n    const { sections } = this.state;\n    if (!sections || !sections.length) return null;\n\n    return sections.map((section, index) => {\n      const getChildren = () => {\n        switch (section.type) {\n          case \"start\":\n            return <Welcome key={index} data={{ ...section, index }} />;\n          case \"venue\":\n            return <Venue key={index} data={{ ...section, index }}></Venue>;\n          default:\n            return <Info key={index} data={{ ...section, index }}></Info>;\n        }\n      };\n      return (\n        <div style={{ position: \"relative\" }}>\n          <div\n            className={`anchor-${section.sectionId}`}\n            style={{ position: \"absolute\", top: \"-40%\" }}\n          ></div>\n          {getChildren()}\n        </div>\n      );\n    });\n  }\n\n  renderMenu() {\n    const { sections } = this.state;\n\n    if (!sections || !sections.length) return null;\n\n    return sections.map(section =>\n      section ? (\n        <div\n          onClick={() => {\n            this.setState({ menuIsExpanded: false });\n            document.querySelector(`.anchor-${section.sectionId}`);\n            window.scroll({\n              top: document\n                .querySelector(`.anchor-${section.sectionId}`)\n                .getBoundingClientRect().top,\n              left: 0,\n              behavior: \"smooth\"\n            });\n          }}\n        >\n          {section.h1}\n        </div>\n      ) : null\n    );\n  }\n\n  render() {\n    const { everythingOK, menuIsExpanded } = this.state;\n    if (!everythingOK) {\n      return (\n        <MainDiv>\n          <div className=\"App\">\n            <form\n              type=\"POST\"\n              onSubmit={e => {\n                e.preventDefault();\n                this.checkPassword();\n              }}\n              style={{\n                position: \"absolute\",\n                top: \"40%\",\n                transform: \"translateY(-40%)\",\n                left: 0,\n                right: 0\n              }}\n            >\n              <PasswordInput\n                onChange={evt => this.setState({ pw: evt.target.value })}\n                type=\"password\"\n                placeholder=\"PLEASE ADD PW\"\n              ></PasswordInput>\n              <SubmitButton type=\"submit\">OK</SubmitButton>\n            </form>\n          </div>\n        </MainDiv>\n      );\n    }\n    return (\n      <MainDiv>\n        <div className=\"App\">\n          <div className=\"App-header\">\n            <h3\n              onClick={() => this.setState({ menuIsExpanded: !menuIsExpanded })}\n            >\n              Bröllopsmeny {menuIsExpanded ? \"➖\" : \"➕\"}\n            </h3>\n            {menuIsExpanded && this.renderMenu()}\n          </div>\n          {this.renderSections()}\n        </div>\n      </MainDiv>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport smoothscroll from \"smoothscroll-polyfill\";\n\n// kick off the polyfill!\nsmoothscroll.polyfill();\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}